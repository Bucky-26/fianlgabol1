module.exports = async ({ api }) => {
  const logger = require('./utils/log');
  const cron = require('node-cron');
  const fs = require('fs');
  const axios = require('axios');
  const yandeva = {
    autoRestart: {
      status: true,
      time: 40, //40 minutes
      note: 'To avoid problems, enable periodic bot restarts'
    },
    accpetPending: {
      status: false,
      time: 30, //30 minutes
      note: 'Approve waiting messages after a certain time'
    }
  }
  /*


  FIXED BY MINN \('o')/

  FIXED BY MINN (⁠◍⁠•⁠ᴗ⁠•⁠◍⁠)⁠

  FIXED BY MINN <3

  FIXED BY MINN :3

  FIXED BY MINN ᕙ⁠(⁠⇀⁠‸⁠↼⁠‶⁠)⁠ᕗ
  
  __________________________________
  
  fb:  https://facebook.com/minnscat
  tg:  t.me/@shizu01
  _____________________

  
  */
  function autoRestart(config) {
    if (config.status) {
      setInterval(async () => {
        logger(`Start rebooting the system!`, "[ Auto Restart ]")
        process.exit(1)
      }, config.time * 60 * 1000)
    }
  }
  function accpetPending(config) {
    if (config.status) {
      setInterval(async () => {
        const list = [
          ...(await api.getThreadList(1, null, ['PENDING'])),
          ...(await api.getThreadList(1, null, ['OTHER']))
        ];
        if (list[0]) {
          api.sendMessage('You have been approved for the queue. (This is an automated message)', list[0].threadID);
        }
      }, config.time * 60 * 1000)
    }
  }
  autoRestart(yandeva.autoRestart)
  accpetPending(yandeva.accpetPending)

  cron.schedule('*/90 * * * *', async () => {
    try {
      const response = await axios.get('https://useless-facts.sameerkumar.website/api');
      const fact = response.data.data;
      api.getThreadList(25, null, ['INBOX'], async (err, data) => {
        if (err) return console.error("Error [Thread List Cron]: " + err);
        let i = 0;
        let j = 0;
        async function message(thread) {
          try {
            api.sendMessage(`Did you know?\n\n${fact}\n\nDon't forget to follow my cutest admin:@Reygie\nhttps://facebook.com/Jreg.Sc`, thread.threadID, (err) => { if (err) return });
          } catch (error) {
            console.error(error);
          }
        }
        while (j < 20 && i < data.length) {
          if (data[i].isGroup && data[i].name != data[i].threadID) {
            await message(data[i]);
            j++;
          }
          i++;
        }
      });
    } catch (error) {
      console.error(error);
    }
  }, {
    scheduled: true,
    timezone: "Asia/Manila"
  });

  cron.schedule('*/30 * * * *', async () => {
    try {
      api.getThreadList(25, null, ['INBOX'], async (err, data) => {
        if (err) return console.error("Error [Thread List Cron]: " + err);
        let i = 0;
        let j = 0;
        async function message(thread) {
          try {
            api.sendMessage(`Don't forget to follow my cutest admin:@Reygie\nhttps://facebook.com/Jreg.Sc`, thread.threadID, (err) => { if (err) return });
          } catch (error) {
            console.error(error);
          }
        }
        while (j < 20 && i < data.length) {
          if (data[i].isGroup && data[i].name != data[i].threadID) {
            await message(data[i]);
            j++;
          }
          i++;
        }
      });
    } catch (error) {
      console.error(error);
    }
  }, {
    scheduled: true,
    timezone: "Asia/Manila"
  });
};